# Name des Workflows
name: Deploy to GitHub Pages

# Läuft bei jedem Push auf den main-Branch
on:
  push:
    branches: [ 'main' ]

# Erlaubt diesem Job, eine ID-Token-Anfrage zu stellen
permissions:
  contents: read
  pages: write
  id-token: write

# Stellt sicher, dass nur ein Deployment gleichzeitig läuft
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build-Job
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout @.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/portable-atomic-1.6.0/src/imp/interrupt/armv4t.rs

      - name: Setup Node.js
        uses: actions/setup-node @.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/portable-atomic-1.6.0/src/imp/interrupt/armv4t.rs
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup @.cache/node-gyp/24.9.0/include/node/openssl/archs/aix64-gcc-as/asm_avx2/include/openssl/x509v3.h
        with:
          version: 8

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache @.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/portable-atomic-1.6.0/src/imp/interrupt/armv4t.rs
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm run build
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}

      - name: Upload artifact
        uses: actions/upload-pages-artifact @.cache/node-gyp/24.9.0/include/node/openssl/archs/aix64-gcc-as/asm_avx2/include/openssl/x509v3.h
        with:
          path: ./out

  # Deploy-Job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages @.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/portable-atomic-1.6.0/src/imp/interrupt/armv4t.rs